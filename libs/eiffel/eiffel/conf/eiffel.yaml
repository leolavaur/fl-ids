# eiffel -- Evaluation framework for FL-based intrusion detection using Flower. 
# ---------
# 
# Configuration for eiffel.
# 
# We use Hydra to pass parameters to eiffel. Hydra's configuration is composable and
# overridable. This file is the main entrypoint that is distributed with Eiffel. It
# contains default values for most parameters, and is meant to be overriden by users.
# 
# Users SHOULD create a `config.yaml` file in their project directory, and use the
# `--config-dir` option to add their working directory to Hydra's search path.
# Otherwise, users can also override parameters on the command line using the
# `<config>=<option>` syntax.
#
# See:
# - https://hydra.cc/docs/advanced/override_grammar/basic/


# User API.
# ---------

# Optional parameters.
num_attackers: 0
num_clients: 10
num_rounds: 10
num_epochs: 10
batch_size: 512

# Attack parameters.
attacks:
  - type: untargeted  # untargeted or targeted
    profile: ${poisoning/profile}

# Distribution parameters.
pools:
  - n_clients: ${num_clients}
    n_malicious: ${num_attackers}

# Runtime configuration.
experiment:
  num_rounds: ${num_rounds}
  num_epochs: ${num_epochs}
  batch_size: ${batch_size}
  strategy: ${strategy}

  pools: "${pools}"

  attacks: "${attacks}"

  datasets: "${oc.dict.values: datasets}"


# Loaded configuration for CLI overrides.
defaults:
  - _self_

  - datasets: ???

  - strategy: fedavg

  - poisoning/profile: loud

  - optional .@_global_: config  # Optional user configuration file.
  - override hydra/job_logging: eiffel
  

hydra:
  # TODO: add overrides in the output path
  run:
    dir: ${gitdir:}/outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}

  sweep:
    dir: ${gitdir:}/multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.override_dirname}


